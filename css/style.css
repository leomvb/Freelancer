/* Custom Properties */

:root {
    --primario: #ffc107;
    --secundario: #0097a7;
    --oscuro: #212121;
    --gris: #757575;
    --anchoPantalla: 1200px;
}


/* apply a natural box layout model to all elements, but allowing components to change */

html {
    box-sizing: border-box;
    min-height: 100%;
    font-size: 62.5%;
    /* Reset de rem ya que por defecto las fuentes vienen en 16px, entonces el 62.5% equivale a 10px y así tenemos ya que 1rem = 10px. */
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-family: 'Krub', sans-serif;
    min-height: 100%;
    background-image: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    /* Tomado de WebGradients.com */
    font-size: 1.6rem;
}

h1,
h2,
h3 {
    margin: 0;
}

h2,
h3 {
    text-align: center;
}

h3 {
    color: var(--secundario);
    font-weight: 400;
    font-size: 3rem;
}

p {
    font-size: 1.8rem;
    line-height: 2;
}

.site-header {
    background-color: white;
}

.site-header nav {
    max-width: var(--anchoPantalla);
    margin: 0 auto;
    padding: 2rem 0;
    display: flex;
    /* Aplicamos Flexbox */
    flex-direction: column;
    align-items: center;
}

@media (min-width: 768px) {
    .site-header nav {
        justify-content: space-between;
        /* Por default viene flex-start */
        flex-direction: row;
    }
}

.site-header nav a {
    color: var(--oscuro);
    font-size: 2.2rem;
    text-decoration: none;
    margin-bottom: 2rem;
}

.site-header nav :last-of-type {
    margin-bottom: 0;
}

@media (min-width: 768px) {
    .site-header nav a {
        margin-bottom: 0;
    }
}

.hero {
    height: 45rem;
    /* 450px */
    background-image: url(../img/hero.jpg);
    position: relative;
    /* Coloco esto debido a que abajo coloqué absolute y el padre necesita llevar relative en éste caso. */
    display: flex;
    justify-content: center;
    /* Para centrar horizontalmente. */
    align-items: center;
    /* Para centrar verticalmente. */
}

.hero::after {
    content: '';
    /* Siempre que se usa un ::after, se debe colocar un content vacío por ejemplo. */
    background-color: rgba(0, 0, 0, .7);
    position: absolute;
    /* Recordemos que el padre debe llevar relative para que éste absolute pueda hacer su función. */
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

.contenedor-hero {
    color: white;
    position: relative;
    /* Usamos ésto para traerlo al frente. */
    z-index: 1;
    /* Para hacer que el relative logre poner por encima el contenido. */
    text-align: center;
}

.contenedor-hero i {
    font-size: 5rem;
    color: var(--primario);
}

.boton {
    background-color: var(--secundario);
    padding: 1rem 5rem;
    border-radius: 2.5rem;
    display: inline-block;
    margin-top: 1rem;
    color: white;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 2.2rem;
    border: none;
}

.boton:hover {
    cursor: pointer;
}

.contenedor {
    max-width: var(--anchoPantalla);
    margin: 3rem auto;
    background-color: white;
    padding: 3rem;
    border-radius: 1rem;
    -webkit-box-shadow: 0px 10px 21px -9px rgba(0, 0, 0, 0.74);
    -moz-box-shadow: 0px 10px 21px -9px rgba(0, 0, 0, 0.74);
    box-shadow: 0px 10px 21px -9px rgba(0, 0, 0, 0.74);
}

.contenedor-servicios {
    margin-top: 3rem;
}

@media (min-width: 768px) {
    .contenedor-servicios {
        display: flex;
        justify-content: space-between;
    }
    .servicio {
        flex: 0 0 calc(33.3% - 1rem);
    }
}

.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.iconos {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background-color: var(--primario);
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    font-size: 3rem;
    margin-top: 2rem;
}

form {
    background-color: var(--gris);
    padding: 2rem;
    border-radius: 1rem;
    margin-top: 3rem;
}

form legend {
    text-align: center!important;
    font-size: 2rem;
    color: var(--primario);
    margin: 3rem 0;
}

@media (min-width: 768px) {
    form {
        max-width: 800px;
        margin: 3rem auto;
    }
    .contenedor-campos {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }
    .campo {
        flex: 0 0 calc(50% - 1rem)
    }
}

.campo {
    display: flex;
    margin-bottom: 2rem;
}

.campo label {
    flex: 0 0 90px;
    padding-top: .5rem;
    color: white;
}

.campo input {
    flex: 1;
    height: 4rem;
}

.campo textarea {
    height: 6rem;
    flex: 1;
}

.w-100 {
    flex: 0 0 100%;
}

.enviar {
    display: flex;
    justify-content: flex-end;
}